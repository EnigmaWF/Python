# -*- coding: utf-8 -*-
"""
В плацкартном вагоне 54 места, пронумерованных числами от 1 до 54. Вагон разбит 
на 9 купе. Первые 36 мест расположены по левую сторону от прохода, места 1–4 
находятся в первом купе, места 5–8 – во втором и т. д. В девятом купе находятся 
места с номерами 33– 36. По правую сторону от прохода находятся боковые места, 
их номера от 37 до 54, причём они нумеруются в противоположном направлении: 
места 37 и 38 находятся напротив девятого купе, а места 53 и 54 – напротив 
первого.
Группа школьников едет на олимпиаду и будет всю дорогу крутить спиннеры. 
Поэтому им нужно купить места в нескольких подряд идущих купе вместе с 
прилегающими боковыми местами. Даны номера свободных мест в поезде. Определите, 
какое наибольшее число подряд идущих купе полностью свободны. Программа 
получает на вход число N – количество свободных мест в вагоне (0 ≤ N ≤ 54). 
Следующие N строк содержат номера свободных мест – различные числа от 1 до 54 
в произвольном порядке, по одному числу в строке. Программа должна вывести одно 
целое число – максимальное число подряд идущих свободных купе (купе – 4 места 
слева от прохода и 2 боковых места) в этом вагоне. 

"""
import numpy

k=9     #число купе
m=6     #число мест в купе

v=numpy.zeros([k, m])   # Создаём нулевой двумерный массив

N = int(input())
for s in range(1,N+1):
    i=int(input())
    if i<37:
        
        if ((i/4) - int(i/4))==0:
            k1=int(i/4)
        else:
            k1=int(i/4)+1
        
        m1=i-k1*4+4        
        
    else:
        k1=int((54-i)/2)+1
        if ((54-i)/2-int((54-i)/2))==0:
            m1=6
        else:
            m1=5        
    
    v[k1-1,m1-1]=1    
        
ch=0

for i in range(0,k):
    p=1
    for j in range(0,m):
       if v[i,j]==0:
           p=0
    if p==1:
        ch=ch+1
      
print(ch)
        
        
        
        
        
        
        
        
        
        
        
